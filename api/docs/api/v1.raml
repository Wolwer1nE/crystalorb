#%RAML 1.0
---
title: crystalorb
baseUri: https://crystalorb.madetara.dev/api/{version}
version: v1
uses:
    p: types/primitives.raml
    d: types/dtos.raml
    e: traits/errors.raml
    m: traits/meta.raml

/users:
    post:
        description: |
            Creates new user
        is: [
            e.Conflict: {description: "User with specified email already exists"},
            e.Fatal
        ]
        body:
            application/json:
                type: p.User
                example: |
                    {
                        "email": "johndoe@example.com",
                        "password": "Qwerty123!"
                    }
        responses:
            201:
                body:
                    application/json:
                        type: d.UserCreated

/maps:
    post:
        description: |
            Creates new map
        is: [
            e.Unprocessable: {description: "Failed to create map with given properties"},
            e.Fatal,
            m.IdempotencyCheck
        ]
        body:
            application/json:
                type: d.MapCreationRequest
        responses:
            201:
                body:
                    application/json:
                        type: d.MapCreatedResponse
    /my:
        get:
            description: |
                Gets maps owned by authenticated user
            is: [e.Fatal]
            responses:
                200:
                    body:
                        application/json:
                            type: d.GetMyMapsResponse
    /{id}:
        get:
            description: |
                Gets map info
            is: [e.NotFound, e.Fatal]
            responses:
                200:
                    body:
                        application/json:
                            type: d.GetMapResponse
        /labels:
            post:
                description: |
                    Adds label to the map
                is: [e.NotFound, e.Fatal, m.IdempotencyCheck]
                body:
                    application/json:
                        type: d.PutLabelRequest
                responses:
                    204:
            /{id}:
                delete:
                    description: |
                        Deletes label from the map
                    is: [e.NotFound, e.Fatal]
                    responses:
                        204:

/files:
    post:
        description: |
            Uploads new file
        body:
            application/octet-stream:
        is: [e.Fatal]
        responses:
            201:
                body:
                    application/json:
                        type: d.FileUploadResponse
    /{id}:
        get:
            description: |
                Gets file
            is: [e.NotFound, e.Fatal]
            responses:
                200:
                    body:
                        application/octet-stream:
        put:
            description: |
                Updates file
            is: [e.NotFound, e.Fatal]
            responses:
                204:
